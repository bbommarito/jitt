name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.24']
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  mutation-test:
    name: Mutation Testing
    runs-on: ubuntu-latest
    needs: [test]
    # Run mutation tests but don't fail the build if they don't meet thresholds yet
    continue-on-error: true
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.24-

    - name: Download dependencies
      run: go mod download

    - name: Install Gremlins
      run: go install github.com/go-gremlins/gremlins/cmd/gremlins@latest

    - name: Run mutation tests
      run: |
        echo "üß™ Running mutation testing with Gremlins..."
        echo "This checks if our tests actually catch bugs by introducing mutations into the code."
        echo ""
        gremlins unleash . || echo "‚ö†Ô∏è  Mutation testing didn't meet thresholds, but that's okay for now!"
        echo ""
        echo "‚úÖ Mutation testing completed!"
        echo "üìä Check the logs above for detailed results."

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Build for multiple platforms
      run: |
        # Linux
        GOOS=linux GOARCH=amd64 go build -v -o dist/jitt-linux-amd64 ./cmd/jitt
        GOOS=linux GOARCH=arm64 go build -v -o dist/jitt-linux-arm64 ./cmd/jitt
        
        # macOS
        GOOS=darwin GOARCH=amd64 go build -v -o dist/jitt-darwin-amd64 ./cmd/jitt
        GOOS=darwin GOARCH=arm64 go build -v -o dist/jitt-darwin-arm64 ./cmd/jitt
        
        # Windows
        GOOS=windows GOARCH=amd64 go build -v -o dist/jitt-windows-amd64.exe ./cmd/jitt

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: dist/
